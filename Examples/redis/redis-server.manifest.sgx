# DO NOT MODIFY. THIS FILE WAS AUTO-GENERATED.

# Redis manifest file example
#
# This manifest was prepared and tested on Ubuntu 16.04.

################################## RUNNING ####################################

# Executable to load into Graphene and run. Note that Graphene tries its best
# to find the corresponding manifest file (by appending ".manifest" or
# ".manifest.sgx") based on the executable name, and vice versa. Still, it is
# required to have the explicit name of the executable here.
loader.exec = file:redis-server

################################## GRAPHENE ###################################

# LibOS layer library of Graphene. There is currently only one implementation,
# so it is always set to libsysdb.so. Note that GRAPHENEDIR macro is expanded
# to relative path to Graphene repository in the Makefile as part of the
# build process.
loader.preload = file:../../Runtime/libsysdb.so

# Show/hide debug log of Graphene ('inline' or 'none' respectively). Note that
# GRAPHENEDEBUG macro is expanded to inline/none in the Makefile as part of the
# build process.
loader.debug_type = none

################################# ARGUMENTS ###################################

# Read application arguments directly from the command line. Don't use this on production!
loader.insecure__use_cmdline_argv = 1

################################# ENV VARS ####################################

# Specify paths to search for libraries. The usual LD_LIBRARY_PATH syntax
# applies. Paths must be in-Graphene visible paths, not host-OS paths (i.e.,
# paths must be taken from fs.mount.xxx.path, not fs.mount.xxx.uri).
#
# In case of Redis:
# - /lib is searched for Glibc libraries (ld, libc, libpthread)
# - /lib/x86_64-linux-gnu is searched for Name Service Switch (NSS) libraries
loader.env.LD_LIBRARY_PATH = /lib:/lib/x86_64-linux-gnu:/usr//lib/x86_64-linux-gnu

################################# MOUNT FS  ###################################

# General notes:
# - There is only one supported type of mount points: 'chroot'.
# - Directory names are (somewhat confusingly) prepended by 'file:'.
# - Names of mount entries (lib, lib2, lib3) are irrelevant but must be unique.
# - In-Graphene visible path names may be arbitrary but we reuse host-OS URIs
#   for simplicity (except for the first 'lib' case).

# Mount host-OS directory to Graphene glibc/runtime libraries (in 'uri') into
# in-Graphene visible directory /lib (in 'path'). Note that GRAPHENEDIR macro
# is expanded to relative path to Graphene repository in the Makefile as part
# of the build process.
fs.mount.lib.type = chroot
fs.mount.lib.path = /lib
fs.mount.lib.uri = file:../../Runtime

# Mount host-OS directory to Name Service Switch (NSS) libraries (in 'uri')
# into in-Graphene visible directory /lib/x86_64-linux-gnu (in 'path').
fs.mount.lib2.type = chroot
fs.mount.lib2.path = /lib/x86_64-linux-gnu
fs.mount.lib2.uri = file:/lib/x86_64-linux-gnu

fs.mount.lib3.type = chroot
fs.mount.lib3.path = /usr//lib/x86_64-linux-gnu
fs.mount.lib3.uri = file:/usr//lib/x86_64-linux-gnu

# Mount host-OS directory to NSS files required by Glibc + NSS libs (in 'uri')
# into in-Graphene visible directory /etc (in 'path').
fs.mount.etc.type = chroot
fs.mount.etc.path = /etc
fs.mount.etc.uri = file:/etc

################################## NETWORK ####################################

# Allow binding on any network interface but only on port 6379. This is the
# default port used by Redis. Note how a missing interface name means "any
# interface".
net.allow_bind.redisport = :6379

############################### SGX: GENERAL ##################################

# Set enclave size (somewhat arbitrarily) to 1024MB. Recall that SGX v1 requires
# to specify enclave size at enclave creation time. If Redis exhausts these
# 1024MB then it will start failing with random errors. Greater enclave sizes
# result in longer startup times, smaller enclave sizes are not enough for
# typical Redis workloads.
sgx.enclave_size = 1024M

# Set maximum number of in-enclave threads (somewhat arbitrarily) to 8. Recall
# that SGX v1 requires to specify the maximum number of simulteneous threads at
# enclave creation time.
#
# Note that internally Graphene may spawn two additional threads, one for IPC
# and one for asynchronous events/alarms. Redis is technically single-threaded
# but spawns couple additional threads to do background bookkeeping. Therefore,
# specifying '8' allows to run a maximum of 6 Redis threads which is enough.
sgx.thread_num = 8

############################# SGX: TRUSTED LIBS ###############################

# Specify all libraries used by Redis and its dependencies (including all
# libraries which can be loaded at runtime via dlopen). The paths to libraries
# are host-OS paths. These libraries will be searched for in in-Graphene visible
# paths according to mount points above.
#
# As part of the build process, Graphene-SGX script (`pal-sgx-sign`) finds each
# specified library, measures its hash, and outputs the hash in auto-generated
# entry 'sgx.trusted_checksum.xxx' in auto-generated redis-server.manifest.sgx.
# Note that this happens on the developer machine.
#
# At runtime, during loading of this library, Graphene-SGX measures its hash
# and compares with the one specified in 'sgx.trusted_checksum.xxx'. If hashes
# match, this library is trusted and allowed to be loaded and used. Note that
# this happens on the client machine.

# Glibc libraries. ld, libc, libm, libdl, librt provide common functionality;
# pthread is needed because Redis spawns helper threads for bookkeeping.
sgx.trusted_files.ld = file:../../Runtime/ld-linux-x86-64.so.2
sgx.trusted_files.libc = file:../../Runtime/libc.so.6
sgx.trusted_files.libm = file:../../Runtime/libm.so.6
sgx.trusted_files.libdl = file:../../Runtime/libdl.so.2
sgx.trusted_files.librt = file:../../Runtime/librt.so.1
sgx.trusted_files.libpthread = file:../../Runtime/libpthread.so.0

# Name Service Switch (NSS) libraries. Glibc calls these libraries as part of
# name-service information gathering. libnss_{compat,files,nis} are the
# most widely used libraries, at least on Ubuntu.
# For more info, see 'man nsswitch.conf'.
sgx.trusted_files.libnsscompat = file:/lib/x86_64-linux-gnu/libnss_compat.so.2
sgx.trusted_files.libnssfiles = file:/lib/x86_64-linux-gnu/libnss_files.so.2
sgx.trusted_files.libnssnis = file:/lib/x86_64-linux-gnu/libnss_nis.so.2

# libNSL is a dependency of libnss_compat above. It is a good example of nested
# library dependencies required by Graphene-SGX.
sgx.trusted_files.libnsl = file:/lib/x86_64-linux-gnu/libnsl.so.1

# Additional dependant libraries for redis version 6+
sgx.trusted_files.libsystemd = file:/lib/x86_64-linux-gnu/libsystemd.so.0
sgx.trusted_files.liblzma = file:/lib/x86_64-linux-gnu/liblzma.so.5
sgx.trusted_files.libgcrypt = file:/lib/x86_64-linux-gnu/libgcrypt.so.20
sgx.trusted_files.libgpgerror = file:/lib/x86_64-linux-gnu/libgpg-error.so.0
sgx.trusted_files.liblz4 = file:/usr//lib/x86_64-linux-gnu/liblz4.so.1

############################ SGX: TRUSTED FILES ###############################

# Trusted no-library files include configuration files, read-only files, and
# other static files. It is useful to specify such files here to make sure
# they are not maliciously modified (modifications will be detected as hash
# mismatch by Graphene-SGX).
#
# Redis by default does not use configuration files, so this section is empty.
# sgx.trusted_files.config = file:<important-configuration-file>

############################# SGX: ALLOWED FILES ###############################

# Specify all non-static files used by app. These files may be accessed by
# Graphene-SGX but their integrity is not verified (Graphene-SGX does not
# measure their hashes). This may pose a security risk!

# Name Service Switch (NSS) files. Glibc reads these files as part of name-
# service information gathering. For more info, see 'man nsswitch.conf'.
sgx.allowed_files.nsswitch = file:/etc/nsswitch.conf
sgx.allowed_files.ethers = file:/etc/ethers
sgx.allowed_files.hosts = file:/etc/hosts
sgx.allowed_files.group = file:/etc/group
sgx.allowed_files.passwd = file:/etc/passwd

# getaddrinfo(3) configuration file. Glibc reads this file to correctly find
# network addresses. For more info, see 'man gai.conf'.
sgx.allowed_files.gaiconf = file:/etc/gai.conf

# Generated by Graphene

sgx.allow_file_creation = 0
sgx.enable_stats = 0
sgx.isvprodid = 0
sgx.isvsvn = 0
sgx.sigfile = file:redis-server.sig
sgx.static_address = 0
sgx.trusted_checksum.exec = 2f0c0da70990720e2c65f9e53716d76e5b1fb8dc85c7b78b80a126fa1a1e6e07
sgx.trusted_checksum.ld = 9ef216b024b82e87429c5ca09713bdffd13445764ebe0d4a71787fdcec6ad59d
sgx.trusted_checksum.libc = ad7c72a6a8e9f3adbf8c659b2d86ea7ba01d7cfb9072b5b9039bc1cc07dc0591
sgx.trusted_checksum.libdl = a1d16ebae2c8a3d5d610f97a66d05755b30e087b5119c2c76ec7992ab4d38980
sgx.trusted_checksum.libgcrypt = a23935bcafd6333272b0a20d013f6b36e0e8b8b43a5955f7f161b8e53c93fe91
sgx.trusted_checksum.libgpgerror = 5d50ffb073142206afbbffdb15e271d34ef579e8df11ba7a621f142a3578b8b8
sgx.trusted_checksum.liblz4 = 47661e023e491330b8b7e28ff60177b26a7f46cb9f66f2080ab0df1f2cb97b3e
sgx.trusted_checksum.liblzma = ec4d253f7b56017b2e8662d25eccb4373fe0262df148646851c15001d5447968
sgx.trusted_checksum.libm = 3c207ca9112abf323d19cfd5a08e71d29a0f8c0aa3c24a52fe3ba41352f7592e
sgx.trusted_checksum.libnsl = 1e9d34e12277f91290e07d23d356032e513504ba65a8b2817b439a8c160af7ba
sgx.trusted_checksum.libnsscompat = 1cdade07cb661441bfe9a19122c1914dce77537d02b9fc52dd8e015a796eb3d3
sgx.trusted_checksum.libnssfiles = 7d1fe3b29c041b1da1829e409a48cea22451890049743f7bae7831b1643f0c07
sgx.trusted_checksum.libnssnis = 4953ec8006af8408c29ac23ed5d884b8c0eaa51f3de78044a2149ae67a15762b
sgx.trusted_checksum.libpthread = e852de960d90c895e27a61d110f03aca7e175d4afc951558113f62d834770a18
sgx.trusted_checksum.librt = 07779ac12da3d8127989deb33b52cee676d4a8142106c69c2e4c54591822ded5
sgx.trusted_checksum.libsystemd = 9cee57a5cdbb4d72c2626e08e1e625bf6aea46e6cc3c910e22f8bd23a7b9ed84
sgx.trusted_checksum.preload0 = 3b2489b58cb850cc7f3c7ae8bb21c54721a8bcd74b27a8cfdd6d467a6dedd8c2
sgx.zero_heap_on_demand = 0
